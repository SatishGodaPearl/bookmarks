; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "GWBrowser"
#define MyAppVersion "0.2.11"
#define MyAppPublisher "Gergely Wootsch"
#define MyAppURL "http://wgergely.github.io/GWBrowser"
#define MyAppExeName "GWBrowser.exe"
#define SourceDir "E:\dev\gwbrowser-standalone"



[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{43C00B91-E185-48A1-9FF0-0A90F0AB831C}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\{#MyAppName}

DisableDirPage=false
DisableProgramGroupPage=false
; The [Icons] "quicklaunchicon" entry uses {userappdata} but its [Tasks] entry has a proper IsAdminInstallMode Check.
UsedUserAreasWarning=no
; Uncomment the following line to run in non administrative install mode (install for current user only.)
;PrivilegesRequired=lowest
OutputDir={#SourceDir}

ChangesEnvironment=yes
ChangesAssociations=yes

OutputBaseFilename=GWBrowserSetup
SetupIconFile={#SourceDir}\vs2015\GWBrowser\icon.ico

;Compression
;https://stackoverflow.com/questions/40447498/best-compression-settings-in-inno-setup-compiler
SolidCompression=no
Compression=lzma2/ultra64
LZMAUseSeparateProcess=yes
LZMADictionarySize=65536
LZMANumFastBytes=64

WizardStyle=modern
VersionInfoVersion={#MyAppVersion}
VersionInfoCompany={#MyAppPublisher}
VersionInfoDescription=
VersionInfoTextVersion=
VersionInfoCopyright={#MyAppPublisher}
VersionInfoProductName=
VersionInfoProductVersion=
AppCopyright={#MyAppPublisher}
ShowLanguageDialog=no
WizardImageFile={#SourceDir}\installer\WIZMODERNIMAGE.BMP
WizardImageBackColor=clGray
WizardSmallImageFile={#SourceDir}\installer\WIZMODERNSMALLIMAGE.BMP
UsePreviousGroup=false
UninstallDisplayIcon={#SourceDir}\vs2015\GWBrowser\icon.ico
UninstallDisplayName={#MyAppName}

[Languages]
Name: english; MessagesFile: compiler:Default.isl

[installDelete]
Type: filesandordirs; Name: {app}

[Tasks]
Name: desktopicon; Description: {cm:CreateDesktopIcon}; GroupDescription: {cm:AdditionalIcons}; Flags: unchecked
Name: quicklaunchicon; Description: {cm:CreateQuickLaunchIcon}; GroupDescription: {cm:AdditionalIcons}; Flags: unchecked; OnlyBelowVersion: 6.1; Check: not IsAdminInstallMode

[Components]
Name: standalone; Description: Standalone; Types: full compact custom; Flags: fixed;
Name: maya; Description: mGWBrowser: Maya Plugin; Types: full; Check: DirExists(ExpandConstant('{userdocs}\maya'))

[Files]
Source: {#SourceDir}\package\{#MyAppExeName}; DestDir: {app}; Components: standalone; Flags: ignoreversion
Source: {#SourceDir}\package\*; DestDir: {app}; Components: standalone; Flags: ignoreversion recursesubdirs createallsubdirs; Permissions: users-modify

Source: {#SourceDir}\package\Lib\site-packages\gwbrowser\templates\servers.conf; DestDir: {userdocs}\{#MyAppName}; Components: standalone; Flags: ignoreversion recursesubdirs createallsubdirs onlyifdoesntexist; Permissions: users-modify
Source: {#SourceDir}\package\Lib\site-packages\gwbrowser\templates\Asset.zip; DestDir: {userdocs}\{#MyAppName}; Components: standalone; Flags: ignoreversion recursesubdirs createallsubdirs onlyifdoesntexist; Permissions: users-modify
Source: {#SourceDir}\package\Lib\site-packages\gwbrowser\templates\Job.zip; DestDir: {userdocs}\{#MyAppName}; Components: standalone; Flags: ignoreversion recursesubdirs createallsubdirs onlyifdoesntexist; Permissions: users-modify

; mGWBrowser
Source: {#SourceDir}\package\Lib\site-packages\gwbrowser\context\mGWBrowser.py; DestDir: {userdocs}\maya\plug-ins; Components: maya; Flags: ignoreversion recursesubdirs createallsubdirs; Permissions: users-modify

[Registry]
Root: HKLM; Subkey: "SYSTEM\CurrentControlSet\Control\Session Manager\Environment"; \
    ValueType: expandsz; ValueName: "PYTHONPATH"; ValueData: "{olddata};{app}\Lib\site-packages"; \
    Check: NeedsAddPath('{app}\Lib\site-packages')

; Extension
Root: HKCR; Subkey: ".gwb";                             ValueData: "{#MyAppName}";          Flags: uninsdeletevalue; ValueType: string;  ValueName: ""
Root: HKCR; Subkey: "{#MyAppName}";                     ValueData: "Program {#MyAppName}";  Flags: uninsdeletekey;   ValueType: string;  ValueName: ""
Root: HKCR; Subkey: "{#MyAppName}\DefaultIcon";         ValueData: "{app}\{#MyAppExeName},0";               ValueType: string;  ValueName: ""
Root: HKCR; Subkey: "{#MyAppName}\shell\open\command";  ValueData: """{app}\{#MyAppExeName}"" ""%1""";  ValueType: string;  ValueName: ""
Root: HKCR; Subkey: "{#MyAppName}\shell\open\command";  ValueData: """{app}\{#MyAppExeName}"" ""%1""";  ValueType: string;  ValueName: ""

; Install path
Root: HKCR; Subkey: "{#MyAppName}\installpath";  ValueData: "{app}\{#MyAppExeName}";  ValueType: string;  ValueName: ""
Root: HKCU; Subkey: "Software\{#MyAppName}\{#MyAppName}";  ValueData: "{app}\{#MyAppExeName}";  ValueType: string;  ValueName: "installpath"

[Icons]
Name: {autoprograms}\{#MyAppName}; Filename: {app}\{#MyAppExeName}
Name: {autodesktop}\{#MyAppName}; Filename: {app}\{#MyAppExeName}; Tasks: desktopicon
Name: {userappdata}\Microsoft\Internet Explorer\Quick Launch\{#MyAppName}; Filename: {app}\{#MyAppExeName}; Tasks: quicklaunchicon

[Run]
Filename: {app}\{#MyAppExeName}; Description: {cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}; Flags: nowait postinstall skipifsilent

;https://stackoverflow.com/questions/3304463/how-do-i-modify-the-path-environment-variable-when-running-an-inno-setup-install
[Code]
function NeedsAddPath(Param: string): boolean;
var
  OrigPath: string;
begin
  if not RegQueryStringValue(HKEY_LOCAL_MACHINE,
    'SYSTEM\CurrentControlSet\Control\Session Manager\Environment',
    'PYTHONPATH', OrigPath)
  then begin
    Result := True;
    exit;
  end;
  { look for the path with leading and trailing semicolon }
  { Pos() returns 0 if not found }
  Result := Pos(';' + Param + ';', ';' + OrigPath + ';') = 0;
end;
